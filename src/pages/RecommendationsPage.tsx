
import { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";
import Layout from "@/components/layout/Layout";
import { useQuiz } from "@/contexts/QuizContext";
import SkinProfileSummary from "@/components/recommendations/SkinProfileSummary";
import PersonalizedRoutine from "@/components/recommendations/PersonalizedRoutine";
import SkincareTips from "@/components/recommendations/SkincareTips";
import { useToast } from "@/hooks/use-toast";

const RecommendationsPage = () => {
  const { skinProfile, isComplete } = useQuiz();
  const navigate = useNavigate();
  const { toast } = useToast();
  const [loading, setLoading] = useState(true);
  const [personalizedMessage, setPersonalizedMessage] = useState("");

  useEffect(() => {
    // Check if quiz is completed
    if (!isComplete) {
      navigate("/quiz");
      return;
    }

    // Simulate AI processing time
    const timer = setTimeout(() => {
      if (skinProfile) {
        generatePersonalizedMessage(skinProfile);
      }
      setLoading(false);
    }, 1500);

    return () => clearTimeout(timer);
  }, [isComplete, navigate, skinProfile]);

  const generatePersonalizedMessage = (profile: any) => {
    // This would ideally be generated by a real AI in production
    // For now, we'll create personalized messages based on the skin profile
    const { skinTone, skinType, concerns } = profile;
    
    let message = `Based on your quiz results, we've crafted a personalized skincare routine for your ${getSkinToneText(skinTone)}, ${getSkinTypeText(skinType)} skin. `;
    
    // Add concern-specific messages
    if (concerns.includes("hyperpigmentation")) {
      message += "Your routine features products with brightening ingredients like vitamin C and niacinamide to target those dark spots. ";
    }
    
    if (concerns.includes("acne")) {
      message += "We've included gentle clarifying products that fight breakouts without harsh stripping. ";
    }
    
    if (concerns.includes("dryness")) {
      message += "Extra hydration boosters will help nourish your skin and prevent that tight, flaky feeling. ";
    }
    
    if (concerns.includes("sensitivity")) {
      message += "Each product is carefully selected to be gentle on your sensitive skin. ";
    }
    
    message += "This routine is specifically formulated for melanin-rich skin like yours, with no white cast from sunscreens and ingredients that work with your skin's natural beauty. Remember that consistency is key - your skin will thank you!";
    
    setPersonalizedMessage(message);
  };

  // Helper functions to convert profile values to readable text
  const getSkinToneText = (value: string) => {
    const map: Record<string, string> = {
      "light-medium": "light to medium brown",
      "medium": "medium brown",
      "medium-dark": "medium to dark brown",
      "dark": "dark brown",
      "very-dark": "very dark brown",
    };
    return map[value] || value;
  };

  const getSkinTypeText = (value: string) => {
    const map: Record<string, string> = {
      "dry": "dry",
      "oily": "oily",
      "combination": "combination",
      "normal": "normal",
      "not-sure": "unique",
    };
    return map[value] || value;
  };

  if (loading) {
    return (
      <Layout>
        <div className="min-h-screen bg-skin-brown-50 py-12">
          <div className="container-custom">
            <div className="max-w-3xl mx-auto text-center">
              <h1 className="text-3xl font-medium text-skin-brown-800 mb-8">
                Crafting Your Perfect Routine
              </h1>
              <div className="flex flex-col items-center justify-center space-y-4">
                <div className="w-16 h-16 border-4 border-skin-terracotta-500 border-t-transparent rounded-full animate-spin"></div>
                <p className="text-skin-brown-600">
                  Our AI is analyzing your skin profile to create your perfect routine...
                </p>
              </div>
            </div>
          </div>
        </div>
      </Layout>
    );
  }

  if (!skinProfile) {
    return (
      <Layout>
        <div className="min-h-screen bg-skin-brown-50 py-12 flex items-center justify-center">
          <div className="text-center">
            <h2 className="text-2xl font-medium text-skin-brown-800 mb-4">
              Let's Complete Your Quiz First
            </h2>
            <p className="text-skin-brown-600 mb-6">
              To see your personalized recommendations, we need to understand your skin.
            </p>
            <button 
              onClick={() => navigate("/quiz")}
              className="btn-primary"
            >
              Take the Quiz
            </button>
          </div>
        </div>
      </Layout>
    );
  }

  return (
    <Layout>
      <div className="bg-skin-brown-50 py-12 md:py-16">
        <div className="container-custom">
          <div className="max-w-4xl mx-auto">
            <div className="text-center mb-10">
              <h1 className="text-4xl font-medium text-skin-brown-800 mb-4">
                Your Personalized Skincare Routine
              </h1>
              
              <div className="bg-white rounded-xl p-6 shadow-sm border border-skin-brown-200 mt-8 mb-12">
                <p className="text-skin-brown-700 italic text-lg">
                  "{personalizedMessage}"
                </p>
              </div>
            </div>
            
            <div className="grid grid-cols-1 md:grid-cols-3 gap-8 mb-12">
              <div className="md:col-span-1">
                <SkinProfileSummary skinProfile={skinProfile} />
              </div>
              
              <div className="md:col-span-2">
                <SkincareTips concerns={skinProfile.concerns} />
              </div>
            </div>
            
            <PersonalizedRoutine 
              skinTone={skinProfile.skinTone}
              skinType={skinProfile.skinType}
              concerns={skinProfile.concerns}
              sensitivity={skinProfile.sensitivity}
              location={skinProfile.location}
            />
            
            <div className="text-center mt-10">
              <div className="flex flex-col sm:flex-row justify-center gap-4">
                <button 
                  onClick={() => {
                    toast({
                      title: "Routine saved!",
                      description: "We've saved your personalized routine to your account.",
                    });
                  }} 
                  className="btn-primary"
                >
                  Save Routine
                </button>
                <button 
                  onClick={() => {
                    toast({
                      title: "Email sent!",
                      description: "We've sent your personalized routine to your email.",
                    });
                  }} 
                  className="btn-outline"
                >
                  Email Routine
                </button>
                <button
                  onClick={() => navigate("/dashboard")}
                  className="btn-outline"
                >
                  Go to Dashboard
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </Layout>
  );
};

export default RecommendationsPage;
